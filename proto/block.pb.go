// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.14.0
// source: block.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//easyjson:json
type GetBlockVerboseTxResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash              string         `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Confirmations     int64          `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Strippedsize      int32          `protobuf:"varint,3,opt,name=strippedsize,proto3" json:"strippedsize,omitempty"`
	Size              int32          `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Weight            int32          `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Height            int32          `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Version           int32          `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	VersionHex        string         `protobuf:"bytes,8,opt,name=versionHex,proto3" json:"versionHex,omitempty"`
	Merkleroot        string         `protobuf:"bytes,9,opt,name=merkleroot,proto3" json:"merkleroot,omitempty"`
	Tx                []*Transaction `protobuf:"bytes,10,rep,name=tx,proto3" json:"tx,omitempty"`
	Time              int64          `protobuf:"varint,11,opt,name=time,proto3" json:"time,omitempty"`
	Mediantime        int64          `protobuf:"varint,12,opt,name=mediantime,proto3" json:"mediantime,omitempty"`
	Nonce             uint32         `protobuf:"varint,13,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Bits              string         `protobuf:"bytes,14,opt,name=bits,proto3" json:"bits,omitempty"`
	Difficulty        float64        `protobuf:"fixed64,15,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Chainwork         string         `protobuf:"bytes,16,opt,name=chainwork,proto3" json:"chainwork,omitempty"`
	NTx               int32          `protobuf:"varint,17,opt,name=nTx,proto3" json:"nTx,omitempty"`
	Previousblockhash string         `protobuf:"bytes,18,opt,name=previousblockhash,proto3" json:"previousblockhash,omitempty"`
	Nextblockhash     string         `protobuf:"bytes,19,opt,name=nextblockhash,proto3" json:"nextblockhash,omitempty"`
}

func (x *GetBlockVerboseTxResult) Reset() {
	*x = GetBlockVerboseTxResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockVerboseTxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockVerboseTxResult) ProtoMessage() {}

func (x *GetBlockVerboseTxResult) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockVerboseTxResult.ProtoReflect.Descriptor instead.
func (*GetBlockVerboseTxResult) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlockVerboseTxResult) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetConfirmations() int64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetStrippedsize() int32 {
	if x != nil {
		return x.Strippedsize
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetVersionHex() string {
	if x != nil {
		return x.VersionHex
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetMerkleroot() string {
	if x != nil {
		return x.Merkleroot
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetTx() []*Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *GetBlockVerboseTxResult) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetMediantime() int64 {
	if x != nil {
		return x.Mediantime
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetBits() string {
	if x != nil {
		return x.Bits
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetChainwork() string {
	if x != nil {
		return x.Chainwork
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetNTx() int32 {
	if x != nil {
		return x.NTx
	}
	return 0
}

func (x *GetBlockVerboseTxResult) GetPreviousblockhash() string {
	if x != nil {
		return x.Previousblockhash
	}
	return ""
}

func (x *GetBlockVerboseTxResult) GetNextblockhash() string {
	if x != nil {
		return x.Nextblockhash
	}
	return ""
}

//easyjson:json
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid     string  `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Hash     string  `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Version  int32   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Size     int32   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Vsize    int32   `protobuf:"varint,5,opt,name=vsize,proto3" json:"vsize,omitempty"`
	Weight   int32   `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Locktime uint32  `protobuf:"varint,7,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Vin      []*Vin  `protobuf:"bytes,8,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout     []*Vout `protobuf:"bytes,9,rep,name=vout,proto3" json:"vout,omitempty"`
	Hex      string  `protobuf:"bytes,10,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Transaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Transaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Transaction) GetVsize() int32 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *Transaction) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Transaction) GetLocktime() uint32 {
	if x != nil {
		return x.Locktime
	}
	return 0
}

func (x *Transaction) GetVin() []*Vin {
	if x != nil {
		return x.Vin
	}
	return nil
}

func (x *Transaction) GetVout() []*Vout {
	if x != nil {
		return x.Vout
	}
	return nil
}

func (x *Transaction) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

//easyjson:json
type Vin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid        string     `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout        uint32     `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Coinbase    string     `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	ScriptSig   *ScriptSig `protobuf:"bytes,4,opt,name=scriptSig,proto3" json:"scriptSig,omitempty"`
	Txinwitness []string   `protobuf:"bytes,5,rep,name=txinwitness,proto3" json:"txinwitness,omitempty"`
	Sequence    uint32     `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *Vin) Reset() {
	*x = Vin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vin) ProtoMessage() {}

func (x *Vin) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vin.ProtoReflect.Descriptor instead.
func (*Vin) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{2}
}

func (x *Vin) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Vin) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Vin) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *Vin) GetScriptSig() *ScriptSig {
	if x != nil {
		return x.ScriptSig
	}
	return nil
}

func (x *Vin) GetTxinwitness() []string {
	if x != nil {
		return x.Txinwitness
	}
	return nil
}

func (x *Vin) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

//easyjson:json
type ScriptSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asm string `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex string `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ScriptSig) Reset() {
	*x = ScriptSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptSig) ProtoMessage() {}

func (x *ScriptSig) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptSig.ProtoReflect.Descriptor instead.
func (*ScriptSig) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{3}
}

func (x *ScriptSig) GetAsm() string {
	if x != nil {
		return x.Asm
	}
	return ""
}

func (x *ScriptSig) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

//easyjson:json
type Vout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        float64       `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	N            uint32        `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	ScriptPubKey *ScriptPubKey `protobuf:"bytes,3,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
}

func (x *Vout) Reset() {
	*x = Vout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vout) ProtoMessage() {}

func (x *Vout) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vout.ProtoReflect.Descriptor instead.
func (*Vout) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4}
}

func (x *Vout) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Vout) GetN() uint32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *Vout) GetScriptPubKey() *ScriptPubKey {
	if x != nil {
		return x.ScriptPubKey
	}
	return nil
}

//easyjson:json
type ScriptPubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asm       string   `protobuf:"bytes,1,opt,name=asm,proto3" json:"asm,omitempty"`
	Hex       string   `protobuf:"bytes,2,opt,name=hex,proto3" json:"hex,omitempty"`
	ReqSigs   int32    `protobuf:"varint,3,opt,name=reqSigs,proto3" json:"reqSigs,omitempty"`
	Type      string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Addresses []string `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ScriptPubKey) Reset() {
	*x = ScriptPubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptPubKey) ProtoMessage() {}

func (x *ScriptPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptPubKey.ProtoReflect.Descriptor instead.
func (*ScriptPubKey) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{5}
}

func (x *ScriptPubKey) GetAsm() string {
	if x != nil {
		return x.Asm
	}
	return ""
}

func (x *ScriptPubKey) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *ScriptPubKey) GetReqSigs() int32 {
	if x != nil {
		return x.ReqSigs
	}
	return 0
}

func (x *ScriptPubKey) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ScriptPubKey) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

var File_block_proto protoreflect.FileDescriptor

var file_block_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x04, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x70, 0x70, 0x65, 0x64, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x70, 0x70, 0x65, 0x64, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69,
	0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x54, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x54, 0x78, 0x12, 0x2c,
	0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61,
	0x73, 0x68, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x6e, 0x52, 0x03, 0x76, 0x69, 0x6e,
	0x12, 0x1f, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x75, 0x74, 0x52, 0x04, 0x76, 0x6f, 0x75,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x68, 0x65, 0x78, 0x22, 0xb7, 0x01, 0x0a, 0x03, 0x56, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76,
	0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x53, 0x69, 0x67, 0x52, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x78, 0x69, 0x6e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x78, 0x69, 0x6e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x2f, 0x0a,
	0x09, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x73, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x68, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x65, 0x78, 0x22, 0x63,
	0x0a, 0x04, 0x56, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x0a, 0x01,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x22, 0x7e, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x73, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x68, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x53, 0x69,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x71, 0x53, 0x69, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData = file_block_proto_rawDesc
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_proto_rawDescData)
	})
	return file_block_proto_rawDescData
}

var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_block_proto_goTypes = []interface{}{
	(*GetBlockVerboseTxResult)(nil), // 0: proto.GetBlockVerboseTxResult
	(*Transaction)(nil),             // 1: proto.Transaction
	(*Vin)(nil),                     // 2: proto.Vin
	(*ScriptSig)(nil),               // 3: proto.ScriptSig
	(*Vout)(nil),                    // 4: proto.Vout
	(*ScriptPubKey)(nil),            // 5: proto.ScriptPubKey
}
var file_block_proto_depIdxs = []int32{
	1, // 0: proto.GetBlockVerboseTxResult.tx:type_name -> proto.Transaction
	2, // 1: proto.Transaction.vin:type_name -> proto.Vin
	4, // 2: proto.Transaction.vout:type_name -> proto.Vout
	3, // 3: proto.Vin.scriptSig:type_name -> proto.ScriptSig
	5, // 4: proto.Vout.scriptPubKey:type_name -> proto.ScriptPubKey
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockVerboseTxResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptPubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_rawDesc = nil
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}
