// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.14.0
// source: chain.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetBlockChainInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain                string     `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Blocks               int32      `protobuf:"varint,2,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Headers              int32      `protobuf:"varint,3,opt,name=headers,proto3" json:"headers,omitempty"`
	Bestblockhash        string     `protobuf:"bytes,4,opt,name=bestblockhash,proto3" json:"bestblockhash,omitempty"`
	Difficulty           float64    `protobuf:"fixed64,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Mediantime           int64      `protobuf:"varint,6,opt,name=mediantime,proto3" json:"mediantime,omitempty"`
	Verificationprogress float64    `protobuf:"fixed64,7,opt,name=verificationprogress,proto3" json:"verificationprogress,omitempty"`
	Initialblockdownload bool       `protobuf:"varint,8,opt,name=initialblockdownload,proto3" json:"initialblockdownload,omitempty"`
	SizeOnDisk           int64      `protobuf:"varint,9,opt,name=size_on_disk,json=sizeOnDisk,proto3" json:"size_on_disk,omitempty"`
	Pruned               bool       `protobuf:"varint,10,opt,name=pruned,proto3" json:"pruned,omitempty"`
	Pruneheight          int32      `protobuf:"varint,11,opt,name=pruneheight,proto3" json:"pruneheight,omitempty"`
	Chainwork            string     `protobuf:"bytes,12,opt,name=chainwork,proto3" json:"chainwork,omitempty"`
	Softforks            *SoftForks `protobuf:"bytes,13,opt,name=softforks,proto3" json:"softforks,omitempty"`
	Warnings             string     `protobuf:"bytes,14,opt,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *GetBlockChainInfoResult) Reset() {
	*x = GetBlockChainInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockChainInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockChainInfoResult) ProtoMessage() {}

func (x *GetBlockChainInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockChainInfoResult.ProtoReflect.Descriptor instead.
func (*GetBlockChainInfoResult) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlockChainInfoResult) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetBlockChainInfoResult) GetBlocks() int32 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetHeaders() int32 {
	if x != nil {
		return x.Headers
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetBestblockhash() string {
	if x != nil {
		return x.Bestblockhash
	}
	return ""
}

func (x *GetBlockChainInfoResult) GetDifficulty() float64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetMediantime() int64 {
	if x != nil {
		return x.Mediantime
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetVerificationprogress() float64 {
	if x != nil {
		return x.Verificationprogress
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetInitialblockdownload() bool {
	if x != nil {
		return x.Initialblockdownload
	}
	return false
}

func (x *GetBlockChainInfoResult) GetSizeOnDisk() int64 {
	if x != nil {
		return x.SizeOnDisk
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetPruned() bool {
	if x != nil {
		return x.Pruned
	}
	return false
}

func (x *GetBlockChainInfoResult) GetPruneheight() int32 {
	if x != nil {
		return x.Pruneheight
	}
	return 0
}

func (x *GetBlockChainInfoResult) GetChainwork() string {
	if x != nil {
		return x.Chainwork
	}
	return ""
}

func (x *GetBlockChainInfoResult) GetSoftforks() *SoftForks {
	if x != nil {
		return x.Softforks
	}
	return nil
}

func (x *GetBlockChainInfoResult) GetWarnings() string {
	if x != nil {
		return x.Warnings
	}
	return ""
}

type SoftForkDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Version uint32  `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Reject  *Reject `protobuf:"bytes,3,opt,name=Reject,proto3" json:"Reject,omitempty"`
}

func (x *SoftForkDescription) Reset() {
	*x = SoftForkDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftForkDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftForkDescription) ProtoMessage() {}

func (x *SoftForkDescription) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftForkDescription.ProtoReflect.Descriptor instead.
func (*SoftForkDescription) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{1}
}

func (x *SoftForkDescription) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SoftForkDescription) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SoftForkDescription) GetReject() *Reject {
	if x != nil {
		return x.Reject
	}
	return nil
}

type Reject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Reject) Reset() {
	*x = Reject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reject) ProtoMessage() {}

func (x *Reject) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reject.ProtoReflect.Descriptor instead.
func (*Reject) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{2}
}

func (x *Reject) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Bip9SoftForkDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Bit        uint32 `protobuf:"varint,2,opt,name=Bit,proto3" json:"Bit,omitempty"`
	StartTime1 int64  `protobuf:"varint,3,opt,name=StartTime1,proto3" json:"StartTime1,omitempty"`
	StartTime2 int64  `protobuf:"varint,4,opt,name=StartTime2,proto3" json:"StartTime2,omitempty"`
	Timeout    int64  `protobuf:"varint,5,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Since      int32  `protobuf:"varint,6,opt,name=Since,proto3" json:"Since,omitempty"`
}

func (x *Bip9SoftForkDescription) Reset() {
	*x = Bip9SoftForkDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bip9SoftForkDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bip9SoftForkDescription) ProtoMessage() {}

func (x *Bip9SoftForkDescription) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bip9SoftForkDescription.ProtoReflect.Descriptor instead.
func (*Bip9SoftForkDescription) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{3}
}

func (x *Bip9SoftForkDescription) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Bip9SoftForkDescription) GetBit() uint32 {
	if x != nil {
		return x.Bit
	}
	return 0
}

func (x *Bip9SoftForkDescription) GetStartTime1() int64 {
	if x != nil {
		return x.StartTime1
	}
	return 0
}

func (x *Bip9SoftForkDescription) GetStartTime2() int64 {
	if x != nil {
		return x.StartTime2
	}
	return 0
}

func (x *Bip9SoftForkDescription) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Bip9SoftForkDescription) GetSince() int32 {
	if x != nil {
		return x.Since
	}
	return 0
}

type SoftForks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bip34     *UnifiedSoftForks `protobuf:"bytes,1,opt,name=bip34,proto3" json:"bip34,omitempty"`
	Bip66     *UnifiedSoftForks `protobuf:"bytes,2,opt,name=bip66,proto3" json:"bip66,omitempty"`
	Bip65     *UnifiedSoftForks `protobuf:"bytes,3,opt,name=bip65,proto3" json:"bip65,omitempty"`
	Csv       *UnifiedSoftForks `protobuf:"bytes,4,opt,name=csv,proto3" json:"csv,omitempty"`
	Segwit    *UnifiedSoftForks `protobuf:"bytes,5,opt,name=segwit,proto3" json:"segwit,omitempty"`
	Taproot   *Regtest          `protobuf:"bytes,6,opt,name=taproot,proto3" json:"taproot,omitempty"`
	Testdummy *Regtest          `protobuf:"bytes,7,opt,name=testdummy,proto3" json:"testdummy,omitempty"`
}

func (x *SoftForks) Reset() {
	*x = SoftForks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftForks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftForks) ProtoMessage() {}

func (x *SoftForks) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftForks.ProtoReflect.Descriptor instead.
func (*SoftForks) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{4}
}

func (x *SoftForks) GetBip34() *UnifiedSoftForks {
	if x != nil {
		return x.Bip34
	}
	return nil
}

func (x *SoftForks) GetBip66() *UnifiedSoftForks {
	if x != nil {
		return x.Bip66
	}
	return nil
}

func (x *SoftForks) GetBip65() *UnifiedSoftForks {
	if x != nil {
		return x.Bip65
	}
	return nil
}

func (x *SoftForks) GetCsv() *UnifiedSoftForks {
	if x != nil {
		return x.Csv
	}
	return nil
}

func (x *SoftForks) GetSegwit() *UnifiedSoftForks {
	if x != nil {
		return x.Segwit
	}
	return nil
}

func (x *SoftForks) GetTaproot() *Regtest {
	if x != nil {
		return x.Taproot
	}
	return nil
}

func (x *SoftForks) GetTestdummy() *Regtest {
	if x != nil {
		return x.Testdummy
	}
	return nil
}

type UnifiedSoftForks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Active bool   `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *UnifiedSoftForks) Reset() {
	*x = UnifiedSoftForks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnifiedSoftForks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedSoftForks) ProtoMessage() {}

func (x *UnifiedSoftForks) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedSoftForks.ProtoReflect.Descriptor instead.
func (*UnifiedSoftForks) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{5}
}

func (x *UnifiedSoftForks) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UnifiedSoftForks) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UnifiedSoftForks) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Regtest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Bip9   *Bip9  `protobuf:"bytes,2,opt,name=bip9,proto3" json:"bip9,omitempty"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Regtest) Reset() {
	*x = Regtest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Regtest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Regtest) ProtoMessage() {}

func (x *Regtest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Regtest.ProtoReflect.Descriptor instead.
func (*Regtest) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{6}
}

func (x *Regtest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Regtest) GetBip9() *Bip9 {
	if x != nil {
		return x.Bip9
	}
	return nil
}

func (x *Regtest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Regtest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Bip9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since     int32  `protobuf:"varint,1,opt,name=since,proto3" json:"since,omitempty"`
	StartTime int32  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Timeout   int64  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Bip9) Reset() {
	*x = Bip9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bip9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bip9) ProtoMessage() {}

func (x *Bip9) ProtoReflect() protoreflect.Message {
	mi := &file_chain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bip9.ProtoReflect.Descriptor instead.
func (*Bip9) Descriptor() ([]byte, []int) {
	return file_chain_proto_rawDescGZIP(), []int{7}
}

func (x *Bip9) GetSince() int32 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *Bip9) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Bip9) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Bip9) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

var File_chain_proto protoreflect.FileDescriptor

var file_chain_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x73, 0x74,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x65, 0x73, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6f,
	0x6e, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x69,
	0x7a, 0x65, 0x4f, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x75, 0x6e,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x2e, 0x0a, 0x09, 0x73, 0x6f, 0x66, 0x74, 0x66, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x66, 0x74,
	0x46, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x09, 0x73, 0x6f, 0x66, 0x74, 0x66, 0x6f, 0x72, 0x6b, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x66, 0x0a, 0x13,
	0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x20, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x70, 0x39, 0x53,
	0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x42, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xcc, 0x02, 0x0a,
	0x09, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x69,
	0x70, 0x33, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x05, 0x62, 0x69, 0x70, 0x33, 0x34, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x69, 0x70,
	0x36, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b,
	0x73, 0x52, 0x05, 0x62, 0x69, 0x70, 0x36, 0x36, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x69, 0x70, 0x36,
	0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x73,
	0x52, 0x05, 0x62, 0x69, 0x70, 0x36, 0x35, 0x12, 0x29, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x03, 0x63,
	0x73, 0x76, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x65, 0x67, 0x77, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x06, 0x73, 0x65, 0x67,
	0x77, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x07, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x2c, 0x0a,
	0x09, 0x74, 0x65, 0x73, 0x74, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x22, 0x56, 0x0a, 0x10, 0x55,
	0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x74, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x62, 0x69, 0x70, 0x39, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x70,
	0x39, 0x52, 0x04, 0x62, 0x69, 0x70, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x6d, 0x0a, 0x04, 0x42, 0x69, 0x70, 0x39, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chain_proto_rawDescOnce sync.Once
	file_chain_proto_rawDescData = file_chain_proto_rawDesc
)

func file_chain_proto_rawDescGZIP() []byte {
	file_chain_proto_rawDescOnce.Do(func() {
		file_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_chain_proto_rawDescData)
	})
	return file_chain_proto_rawDescData
}

var file_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chain_proto_goTypes = []interface{}{
	(*GetBlockChainInfoResult)(nil), // 0: proto.GetBlockChainInfoResult
	(*SoftForkDescription)(nil),     // 1: proto.SoftForkDescription
	(*Reject)(nil),                  // 2: proto.Reject
	(*Bip9SoftForkDescription)(nil), // 3: proto.Bip9SoftForkDescription
	(*SoftForks)(nil),               // 4: proto.SoftForks
	(*UnifiedSoftForks)(nil),        // 5: proto.UnifiedSoftForks
	(*Regtest)(nil),                 // 6: proto.Regtest
	(*Bip9)(nil),                    // 7: proto.Bip9
}
var file_chain_proto_depIdxs = []int32{
	4,  // 0: proto.GetBlockChainInfoResult.softforks:type_name -> proto.SoftForks
	2,  // 1: proto.SoftForkDescription.Reject:type_name -> proto.Reject
	5,  // 2: proto.SoftForks.bip34:type_name -> proto.UnifiedSoftForks
	5,  // 3: proto.SoftForks.bip66:type_name -> proto.UnifiedSoftForks
	5,  // 4: proto.SoftForks.bip65:type_name -> proto.UnifiedSoftForks
	5,  // 5: proto.SoftForks.csv:type_name -> proto.UnifiedSoftForks
	5,  // 6: proto.SoftForks.segwit:type_name -> proto.UnifiedSoftForks
	6,  // 7: proto.SoftForks.taproot:type_name -> proto.Regtest
	6,  // 8: proto.SoftForks.testdummy:type_name -> proto.Regtest
	7,  // 9: proto.Regtest.bip9:type_name -> proto.Bip9
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chain_proto_init() }
func file_chain_proto_init() {
	if File_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockChainInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftForkDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bip9SoftForkDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftForks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnifiedSoftForks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Regtest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bip9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chain_proto_goTypes,
		DependencyIndexes: file_chain_proto_depIdxs,
		MessageInfos:      file_chain_proto_msgTypes,
	}.Build()
	File_chain_proto = out.File
	file_chain_proto_rawDesc = nil
	file_chain_proto_goTypes = nil
	file_chain_proto_depIdxs = nil
}
